(
    // Maximum number of notifications to show at any one time.
    // A value of 0 means that there is no limit.
    max_notifications: 10,

    // The default timeout, in miliseconds, for notifications that don't have an initial timeout set.
    // 1000ms = 1s.
    timeout: 4000,

    // `poll_interval` decides decides how often (in milliseconds) Wired checks events,
    // draws notifications (if necessary) -- the update loop while any notification is present.
    // Note that when no notifications are present, Wired polls at `idle_poll_interval` instead.
    // 16ms ~= 60hz / 7ms ~= 144hz.
    poll_interval: 8,

    // The interval at which wired updates when no notifications/windows are present.
    //idle_poll_interval: 500,

    // Wired will pause notifications if you are idle (no mouse or keyboard input) for longer than
    // `idle_threshold` seconds.
    // Note that notifications will not be automatically unpaused on wake, and will need to be manually
    // cleared, unless `unpause_on_input` is set to true.
    // Also note that no distinction is made between manually paused and idle paused notifications.
    // If `idle_threshold` is not specified, the behavior will be disabled entirely.
    //idle_threshold: 3600,

    // Notifications will spawn paused, and have to be manually unpaused or cleared by the user,
    // unless `unpause_on_input` is also set.
    //notifications_spawn_paused: false,

    // Unpause notifications when we receive any input after being idle for longer than 1 second.
    // Note that no distinction is made between manually paused notifications and idle paused/spawned notifications.
    //unpause_on_input: false,

    // Enable/disable replacement functionality.
    // If this is disabled, replacement requests will just send a new notification.
    // E.g., with replacing_enabled: true, Pidgin will only show the latest message from each contact,
    // instead of sending a new one for each message.
    // Default: true
    //replacing_enabled: true,

    // Whether a notification should reset its timeout when it is replaced.
    // No effect if replacing_enabled is set to false.
    // Default: false
    //replacing_resets_timeout: false,

    // Some apps/programs close notifications on their own by sending a request to dbus.
    // Sometimes this is not desired.
    // Default: true
    //closing_enabled: true,

    // How many notifications are kept in history.
    // Each notification is roughly 256 bytes (excluding buffers!), so there's some math to do here.
    // Default: 10
    //history_length: 10,

    // When a `NotificationBlock` has monitorr: -1 (i.e. should follow active monitor), then what input
    // should we use to determine the active monitor?
    // Options: Mouse, Window
    // Default: Mouse
    //focus_follows: Mouse,

    // Enable printing notification data to a file.
    // Useful for scripting purposes.
    // The data is written as JSON.
    // Default: None
    //print_to_file: "/tmp/wired.log",

    // Minimum window width and height.  This is used to create the base rect that the notification
    // grows within.
    // The notification window will never be smaller than this.
    // A value of 1 means that the window will generally always resize with notification, unless
    // you have a 1x1 pixel notification...
    // Generally, you shouldn't need to set this.
    //min_window_width: 1,
    //min_window_height: 1,

    // Enable/disable debug rendering.
    debug: false,
    debug_color: Color(r: 0.0, g: 1.0, b: 0.0, a: 1.0), // Primary color for debug rectangles.
    debug_color_alt: Color(r: 1.0, g: 0.0, b: 0.0, a: 1.0), // Secondary color for debug rectangles.

    shortcuts: (
    		notification_interact: 2,
    		notification_close: 1,
    		notification_closeall: 3,
    ),
    history_length: 100,
    replacing_resets_timeout: true,
    min_window_width: 500,
    layout_blocks: [
    		(
    			name: "root",
    			parent: "",
    			hook: (parent_anchor: MT, self_anchor: MT),
    			offset: (x: 0, y: 38),
    			params: NotificationBlock((
    				monitor: 0,
    				border_width: 2.0,
    				border_rounding: 15.0,
    				gap: (x: 0.0, y: 5.0),
    				background_color: (hex: "#00161221"),
    				border_color: (hex: "#8190B7"),
    				border_color_low: (hex: "#806672"),
    				border_color_critical: (hex: "#FF98B3"),
    				notification_hook: (parent_anchor: MB, self_anchor: MT),
    			)),
    		),
    		(
    			name: "summary",
    			parent: "root",
    			offset: (x: 0, y: 0),
    			hook: (parent_anchor: TL, self_anchor: TL),
    			params: TextBlock((
    				text: "%s",
    				padding: (left: 48.0, right: 18.0, top: 28.0, bottom: 24.0),
    				font: "Dejavu Sans 14",
    				color: Color(hex: "#f8f8f2"),
    				dimensions: (
    					width: (min: 500, max: 500),
    					height: (min: 0, max: 100),
    				),
    				dimensions_image_hint: (
    					width: (min: 40, max: 120),
    					height: (min: 0, max: 120),
    				),
    			)),
    		),
    		(
    			name: "image",
    			parent: "summary",
    			hook: (parent_anchor: TL, self_anchor: TR),
    			offset: (x: 0, y: 0),
    			render_criteria: [ HintImage ],
    			params: ImageBlock((
    				image_type: Hint,
    				padding: (left: 28, right: -24.0, top: 24.0, bottom: 24.0),
    				rounding: 8.0,
    				scale_width: 100,
    				scale_height: 100,
    				filter_mode: Lanczos3,
    			)),
    		),
    		(
    			name: "body",
    			parent: "summary",
    			offset: (x: 0, y: 0),
    			hook: (parent_anchor: BL, self_anchor: TL),
    			render_criteria: [ Body ],
    			render_anti_criteria: [ AppName("progress") ],
    			params: ScrollingTextBlock((
    				text: "%b",
    				padding: (left: 48.0, right: 18.0, top: -12.0, bottom: 30.0),
    				font: "DejaVu Sans 11",
    				color: (hex: "#f8f8f2"),
    				scroll_speed: 0.1,
    				lhs_dist: 24.0,
    				rhs_dist: 24.0,
    				scroll_t: 1.0,
    				width: (min: 40, max: 500),
    				width_image_hint: (min: 120, max: 120),
    			)),
    		),
    		(
    			name: "progress",
    			parent: "body",
    			offset: (x: 0, y: 0),
    			hook: (parent_anchor: BL, self_anchor: TL),
    			render_criteria: [ Progress ],
    			render_anti_criteria: [ Body ],
    			params: ProgressBlock((
    				padding: (left: 48.0, right: 12.0, top: 15.0, bottom: 42.0),
    				border_width: 0.0,
    				border_rounding: 0.0,
    				fill_rounding: 0.0,
    				border_color: (hex: "#1D1F21"),
    				background_color: (hex: "#403D3D"),
    				fill_color: (hex: "#66D9EF"),
    				width: 735.0,
    				height: 24.0,
    			)),
    		),
    		(
    			name: "progress_muted",
    			parent: "body",
    			offset: (x: 0, y: 0),
    			hook: (parent_anchor: BL, self_anchor: TL),
    			render_criteria: [ And([Progress, Body]) ],
    			params: ProgressBlock((
    				padding: (left: 18.0, right: 18.0, top: 15.0, bottom: 42.0),
    				border_width: 0.0,
    				border_rounding: 0.0,
    				fill_rounding: 0.0,
    				border_color: (hex: "#1D1F21"),
    				background_color: (hex: "#403D3D"),
    				fill_color: (hex: "#64888F"),
    				width: 705.0,
    				height: 24.0,
    			)),
    		),
    	],
)
